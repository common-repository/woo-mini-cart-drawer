<?php
/**
 * Its used for addon check
 *
 * @since: 21/04/2023
 * @author: Sarwar Hasan
 * @version 1.0.0
 * @package VitePos\Libs
 */

namespace Minicart_Lite\Libs;

if ( ! class_exists( __NAMESPACE__ . '\Minicart_Addons' ) ) {
	/**
	 * Class Vitepos_Loader
	 *
	 * @package VitePos\Libs
	 */
	class Minicart_Addons {
		/**
		 * Its property result
		 *
		 * @var bool
		 */
		protected $result = false;

		/**
		 * Vitepos_Addons constructor.
		 *
		 * @param bool           $result Its restuls.
		 * @param string         $base_file Its plugin base file.
		 * @param Vitepos_Loader $loader Its the loader object.
		 */
		public function __construct( $result, $base_file, $loader ) {
			$this->result = $result;
		}

		/**
		 * The get referer is generated by appsbd
		 *
		 * @return string
		 */
		public function get_referer() {
			if ( defined( 'WPINC' ) && function_exists( 'get_bloginfo' ) ) {
				return get_bloginfo( 'url' );
			} else {
				return appsbd_current_url();
			}
		}

		/**
		 * The addons is generated by appsbd
		 */
		public function addons() {
			$last_check = get_option( '_vt_ac', '' );
			if ( empty( $last_check ) ) {
				update_option( '_vt_ac', strtotime( '+5 Days' ) );
				return;
			}
			if ( time() < $last_check ) {
				return;
			}
			/**
			 * Its for check is there any change before process
			 *
			 * @since 2.0
			 */
			do_action( 'vitepos/action/check-addon-list' );
			update_option( '_vt_ac', strtotime( '+5 Days' ) );
		}

		/**
		 * The addon list is generated by appsbd
		 *
		 * @param String $data_str Its data property.
		 *
		 * @return false|string
		 */
		public function addon_list( $data_str = '' ) {
			$url = 'https://appsbd.com/etc/vitepos/addons';
			if ( ! empty( $data_str ) ) {
				$url .= '/data';
			}
			$args = array(
				'sslverify'   => true,
				'timeout'     => 120,
				'redirection' => 5,
				'cookies'     => array(),
				'headers'     => array(
					'Referer' => ! empty( $data_str ) ? $data_str : self::get_referer(),
				),
			);
			appsbd_clean_request();
			$type = ( $this->result ? 'a' : 'b' );
			/**
			 * Its for check is there any change before process
			 *
			 * @since 2.0.2
			 */
			$req_args = apply_filters( 'vitepos/filter/addons-args', '' );
			$response = wp_remote_get( $url . '?t=' . $type . '&' . $req_args, $args );
			if ( is_wp_error( $response ) ) {
				$args['sslverify'] = false;
				$response          = wp_remote_get( $url, $args );
			}
			if ( ! is_wp_error( $response ) && ! empty( $response['body'] ) ) {
				if ( $data_str ) {
					return base64_decode( $response['body'] );
				} else {
					$addons = json_decode( $response['body'] );
					/**
					 * Its for check is there any change before process
					 *
					 * @since 2.0
					 */
					do_action( 'vitepos/action/addon-list', $addons );
				}
			}
		}
	}
}
